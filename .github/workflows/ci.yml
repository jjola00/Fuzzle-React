name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: "18"
  EXPO_CLI_VERSION: "latest"

jobs:
  # Code Quality and Testing
  code-quality:
    name: Code Quality & Testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci
          npx expo install --fix

      - name: Run TypeScript type check
        run: npm run type-check

      - name: Run ESLint
        run: npm run lint

      - name: Check Prettier formatting
        run: npm run format:check

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  # Security Scanning
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run npm audit
        run: npm audit --audit-level=high
        continue-on-error: true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

  # Build Preview for Pull Requests
  build-preview:
    name: Build Preview
    runs-on: ubuntu-latest
    needs: [code-quality, security-scan]
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: ${{ env.EXPO_CLI_VERSION }}
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
          packager: npm

      - name: Install dependencies
        run: |
          npm ci
          npx expo install --fix

      - name: Build preview for iOS
        run: npx eas build --platform ios --profile preview --non-interactive

      - name: Build preview for Android
        run: npx eas build --platform android --profile preview --non-interactive

      - name: Comment PR with build info
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ”¨ Preview builds are ready! Check the EAS dashboard for download links.'
            })

  # Build Production on Main Branch
  build-production:
    name: Build Production
    runs-on: ubuntu-latest
    needs: [code-quality, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: ${{ env.EXPO_CLI_VERSION }}
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
          packager: npm

      - name: Install dependencies
        run: |
          npm ci
          npx expo install --fix

      - name: Build production for iOS
        run: npx eas build --platform ios --profile production --non-interactive

      - name: Build production for Android
        run: npx eas build --platform android --profile production --non-interactive

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: |
            Production build completed successfully.

            Changes in this release:
            - See commit history for details

            Build artifacts available on EAS dashboard.
          draft: false
          prerelease: false
